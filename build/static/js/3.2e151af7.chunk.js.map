{"version":3,"sources":["Containers/Registration/index.jsx","BusinessLayer/Register/RegisterManager.js","Helpers/HttpRequestHelper.js","Constants/APIUrls.js","Components/OverlayComponent/index.jsx","BusinessLayer/Login/LoginManager.js","Helpers/emailValidation.js"],"names":["Registration","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleUserInput","e","_this$state","state","userInfo","validateUserInfo","targetName","target","name","targetValue","value","validateEmail","setState","registerUser","user","isOverlayVisible","postJSON","concat","Users","then","getUser","catch","err","console","log","response","isUserRegisteredSuccessfully","fullUserInfo","data","redirectToProfile","_this$state2","react_default","a","createElement","Redirect","to","pathname","disableRegisterButton","_this$state3","fullName","email","password","confirmPassword","document","title","className","src","alt","type","aria-describedby","placeholder","onChange","href","onClick","disabled","OverlayComponent","visibility","Component","__webpack_require__","d","__webpack_exports__","get","superagent__WEBPACK_IMPORTED_MODULE_0__","superagent__WEBPACK_IMPORTED_MODULE_0___default","n","url","request","body","post","set","send","require","loginUser","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Overlay","_ref","overlayCssClass","_Helpers_HttpRequestHelper__WEBPACK_IMPORTED_MODULE_0__","_Constants_APIUrls__WEBPACK_IMPORTED_MODULE_1__","userId","Promise","resolve","reject","error","test"],"mappings":"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","file":"static/js/3.2e151af7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport Overlay from \"@Components/OverlayComponent\";\nimport { registerUser } from \"@BusinessLayer/Register/RegisterManager\";\nimport { getUser } from \"@BusinessLayer/Login/LoginManager\";\nimport validateEmail from \"@Helpers/emailValidation\";\n\nimport \"./index.css\";\n\nclass Registration extends Component {\n  constructor() {\n    super();\n    this.state = {\n      validateUserInfo: {\n        fullName: null,\n        password: null,\n        confirmPassword: null,\n        email: null\n      },\n      userInfo: {\n        fullName: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        email: \"\"\n      },\n      fullUserInfo: null,\n      isOverlayVisible: false,\n      isUserRegisteredSuccessfully: false\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Login\";\n  }\n\n  handleUserInput = e => {\n    const { userInfo, validateUserInfo } = this.state;\n    const targetName = e.target.name;\n    const targetValue = e.target.value;\n    if (targetName === \"email\")\n      validateUserInfo[targetName] =\n        targetValue !== \"\" && validateEmail(targetValue);\n    else validateUserInfo[targetName] = targetValue !== \"\";\n    userInfo[targetName] = targetValue;\n    this.setState({ userInfo });\n  };\n\n  registerUser = () => {\n    const { userInfo } = this.state;\n\n    this.setState({ isOverlayVisible: true });\n    registerUser(userInfo)\n      .then(() => this.getUser())\n      .catch(err => console.log(err));\n  };\n\n  getUser = () => {\n    getUser(5).then(response =>\n      this.setState({\n        isUserRegisteredSuccessfully: true,\n        fullUserInfo: response.data\n      })\n    );\n  };\n\n  redirectToProfile = () => {\n    const { isUserRegisteredSuccessfully, fullUserInfo } = this.state;\n    if (isUserRegisteredSuccessfully)\n      return (\n        <Redirect\n          to={{\n            pathname: \"/profile\",\n            state: {\n              fullUserInfo: fullUserInfo\n            }\n          }}\n        />\n      );\n  };\n\n  disableRegisterButton = () => {\n    const { validateUserInfo, userInfo } = this.state;\n    return !(\n      validateUserInfo.fullName &&\n      validateUserInfo.email &&\n      userInfo.password === userInfo.confirmPassword &&\n      validateUserInfo.password !== \"\" &&\n      validateUserInfo.password !== null\n    );\n  };\n\n  render() {\n    const { isOverlayVisible } = this.state;\n\n    return (\n      <div className=\"container h-100\">\n        <div className=\"row align-items-center h-100\">\n          <div className=\"col-sm-12 col-md-6 col-lg-5 mx-auto\">\n            <div className=\"card card-background\">\n              <div className=\"card-body\">\n                <img\n                  className=\"mx-auto d-block logo\"\n                  src=\"http://zwaar.net/media/new/images/logo_en_b.svg\"\n                  alt=\"logo\"\n                />\n                <h5 className=\"card-title text-center m-4\">\n                  Register to Zwaar\n                </h5>\n                <div className=\"form-group\">\n                  <label>Full Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"fullName\"\n                    aria-describedby=\"fullName\"\n                    placeholder=\"Enter full name\"\n                    onChange={this.handleUserInput}\n                  />\n                  <div className=\"invalid-feedback\">\n                    Please provide a valid full name.\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label>Email address</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    aria-describedby=\"email\"\n                    placeholder=\"Enter email\"\n                    onChange={this.handleUserInput}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    onChange={this.handleUserInput}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Confirm Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm password\"\n                    onChange={this.handleUserInput}\n                  />\n                  <div className=\"invalid-feedback\">\n                    Please confirm password\n                  </div>\n                </div>\n                <div className=\"form-inline mt-4\">\n                  <a href=\"/\" className=\"card-link col-6\">\n                    Login\n                  </a>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary col-5 offset-1\"\n                    onClick={this.registerUser}\n                    disabled={this.disableRegisterButton()}\n                  >\n                    Register\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Overlay visibility={isOverlayVisible} />\n        {this.redirectToProfile()}\n      </div>\n    );\n  }\n}\nexport default Registration;\n","import { postJSON } from \"@Helpers/HttpRequestHelper\";\nimport { Users } from \"@Constants/APIUrls\";\n\nexport function registerUser(user) {\n  return postJSON(`${Users.registerUser}`, user);\n}\n","import request from \"superagent\";\r\n\r\nexport function get(url) {\r\n  return request.get(url);\r\n}\r\n\r\nexport function postJSON(url, body) {\r\n  return request\r\n    .post(url)\r\n    .set(\"Content-Type\", \"application/json\")\r\n    .set(\"Accept\", \"application/json\")\r\n    .send(body);\r\n}\r\n\r\nexport function deleteRequest(url) {\r\n  return request.delete(url);\r\n}\r\n\r\nexport function putJSON(url, body) {\r\n  return request\r\n    .put(url)\r\n    .set(\"Content-Type\", \"application/json\")\r\n    .set(\"Accept\", \"application/json\")\r\n    .send(body);\r\n}\r\n","require(\"dotenv\");\r\n\r\nlet API_BASE_PATH = \"https://reqres.in/api/\";\r\n\r\nexport const Users = {\r\n  registerUser: `${API_BASE_PATH}register`,\r\n  loginUser: `${API_BASE_PATH}login`,\r\n  getUser: `${API_BASE_PATH}users`\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst overlayCssClass = visibility => {\r\n  if (!visibility) return \"overlay-off\";\r\n  return \"overlay-on\";\r\n};\r\n\r\nconst Overlay = ({ visibility }) => (\r\n  <div className={overlayCssClass(visibility)}>\r\n    <div className=\"spinner\">\r\n      <div className=\"double-bounce1\" />\r\n      <div className=\"double-bounce2\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Overlay;\r\n","import { get, postJSON } from \"@Helpers/HttpRequestHelper\";\nimport { Users } from \"@Constants/APIUrls\";\n\nexport function loginUser(user) {\n  return postJSON(`${Users.loginUser}`, user);\n}\n\nexport function getUser(userId) {\n  const promise = new Promise((resolve, reject) => {\n    get(`${Users.getUser}/${userId}`)\n      .then(response => {\n        resolve(response.body);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n  return promise;\n}\n","export default function validateEmail(email) {\n  const emailRegEx = /^([a-zA-Z0-9])(([a-zA-Z0-9])*([\\._\\+-])*([a-zA-Z0-9]))*@(([a-zA-Z0-9\\-])+(\\.))+([a-zA-Z]{2,4})+$/;\n  if (emailRegEx.test(email)) return true;\n  return false;\n}\n"],"sourceRoot":""}